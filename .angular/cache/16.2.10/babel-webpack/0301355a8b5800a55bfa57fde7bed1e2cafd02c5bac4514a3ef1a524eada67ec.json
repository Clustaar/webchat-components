{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, startWith, skip, takeWhile } from 'rxjs/operators';\nimport { UntypedFormControl } from '@angular/forms';\nimport { MatLegacyAutocompleteTrigger as MatAutocompleteTrigger } from '@angular/material/legacy-autocomplete';\nimport * as i0 from \"@angular/core\";\nfunction ListComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"border-right-color\", ctx_r0.primaryColor);\n  }\n}\nfunction ListComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 9);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"border-right-color\", ctx_r1.primaryColor);\n  }\n}\nfunction ListComponent_div_7_ng_container_5_mat_optgroup_1_mat_option_1_img_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 22);\n  }\n  if (rf & 2) {\n    const choice_r10 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"src\", choice_r10.imageUrl, i0.ɵɵsanitizeUrl)(\"alt\", choice_r10.title);\n  }\n}\nfunction ListComponent_div_7_ng_container_5_mat_optgroup_1_mat_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 20);\n    i0.ɵɵlistener(\"onSelectionChange\", function ListComponent_div_7_ng_container_5_mat_optgroup_1_mat_option_1_Template_mat_option_onSelectionChange_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const choice_r10 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r13.sendSelectedValue(choice_r10));\n    });\n    i0.ɵɵtemplate(1, ListComponent_div_7_ng_container_5_mat_optgroup_1_mat_option_1_img_1_Template, 1, 2, \"img\", 21);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const choice_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", choice_r10.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", choice_r10.imageUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", choice_r10.title, \" \");\n  }\n}\nfunction ListComponent_div_7_ng_container_5_mat_optgroup_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-optgroup\", 18);\n    i0.ɵɵtemplate(1, ListComponent_div_7_ng_container_5_mat_optgroup_1_mat_option_1_Template, 3, 3, \"mat-option\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const section_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"label\", section_r6.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", section_r6.choices);\n  }\n}\nfunction ListComponent_div_7_ng_container_5_ng_container_2_mat_option_1_img_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 22);\n  }\n  if (rf & 2) {\n    const choice_r17 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"src\", choice_r17.imageUrl, i0.ɵɵsanitizeUrl)(\"alt\", choice_r17.title);\n  }\n}\nfunction ListComponent_div_7_ng_container_5_ng_container_2_mat_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 20);\n    i0.ɵɵlistener(\"onSelectionChange\", function ListComponent_div_7_ng_container_5_ng_container_2_mat_option_1_Template_mat_option_onSelectionChange_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r21);\n      const choice_r17 = restoredCtx.$implicit;\n      const ctx_r20 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r20.sendSelectedValue(choice_r17));\n    });\n    i0.ɵɵtemplate(1, ListComponent_div_7_ng_container_5_ng_container_2_mat_option_1_img_1_Template, 1, 2, \"img\", 21);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const choice_r17 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", choice_r17.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", choice_r17.imageUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", choice_r17.title, \" \");\n  }\n}\nfunction ListComponent_div_7_ng_container_5_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ListComponent_div_7_ng_container_5_ng_container_2_mat_option_1_Template, 3, 3, \"mat-option\", 19);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const section_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", section_r6.choices);\n  }\n}\nfunction ListComponent_div_7_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ListComponent_div_7_ng_container_5_mat_optgroup_1_Template, 2, 2, \"mat-optgroup\", 16);\n    i0.ɵɵtemplate(2, ListComponent_div_7_ng_container_5_ng_container_2_Template, 2, 1, \"ng-container\", 17);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const section_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", section_r6.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !section_r6.title);\n  }\n}\nfunction ListComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"input\", 11);\n    i0.ɵɵlistener(\"click\", function ListComponent_div_7_Template_input_click_1_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.onInputClick());\n    })(\"blur\", function ListComponent_div_7_Template_input_blur_1_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.onInputBlur($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"div\", 12);\n    i0.ɵɵlistener(\"click\", function ListComponent_div_7_Template_div_click_2_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.togglePanel($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-autocomplete\", 13, 14);\n    i0.ɵɵtemplate(5, ListComponent_div_7_ng_container_5_Template, 3, 2, \"ng-container\", 15);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const _r4 = i0.ɵɵreference(4);\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"border-color\", ctx_r2.primaryColor);\n    i0.ɵɵproperty(\"placeholder\", ctx_r2.action.placeholder)(\"formControl\", ctx_r2.inputControl)(\"matAutocomplete\", _r4);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.filteredSections);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    message: a0\n  };\n};\nfunction ListComponent_user_message_console_action_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"user-message-console-action\", 23);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"action\", i0.ɵɵpureFunction1(5, _c0, ctx_r3.selectedChoice))(\"userTextColor\", ctx_r3.userTextColor)(\"userBubbleColor\", ctx_r3.userBubbleColor)(\"inverted\", ctx_r3.inverted)(\"autoScroll\", ctx_r3.autoScroll);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"inverted\": a0\n  };\n};\nconst _c2 = function (a0, a1) {\n  return {\n    \"bot\": a0,\n    \"user\": a1\n  };\n};\nexport class ListComponent {\n  constructor(cdr, app) {\n    this.cdr = cdr;\n    this.app = app;\n    this.inverted = false;\n    this.primaryColor = '#30B286';\n    this.textColor = '#FFFFFF';\n    this.userBubbleColor = '#C5DBEA';\n    this.userTextColor = '#2C3F59';\n    this.autoScroll = true;\n    this.disabled = false;\n    this.onSendReply = new EventEmitter();\n    this.onLoadNextAction = new EventEmitter();\n    this.onLastActionRendered = new EventEmitter();\n    this.filteredSections$ = new Observable();\n    this.filteredSections = [];\n    this.inputControl = new UntypedFormControl('');\n  }\n  ngOnInit() {\n    if (this.disabled) {\n      this.inputControl.disable();\n    }\n    this.onLoadNextAction.emit(true);\n    this.filteredSections = JSON.parse(JSON.stringify(this.action.sections));\n    this.filteredSections$ = this.inputControl.valueChanges.pipe(startWith(''), map(value => this._filter(value || '')));\n    this.filteredSections$.pipe(skip(1), takeWhile(() => this.selectedChoice === undefined)).subscribe(filteredSections => {\n      this.filteredSections = filteredSections;\n      this.detectChanges();\n    });\n    if (this.autoScroll) {\n      setTimeout(() => {\n        let element = document.getElementById('chat-console-messages');\n        if (element) {\n          element.scrollTop = element.scrollHeight - element.clientHeight;\n          this.cdr.markForCheck();\n        }\n      }, 500);\n    }\n    this.cdr.markForCheck();\n  }\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.onLastActionRendered.emit(true);\n    }, 0);\n  }\n  onInputClick() {\n    if (!this.disabled) {\n      this.auto.openPanel();\n      // This trigger the autocomplete detection change on zoneless mode\n      this.auto.updatePosition();\n    }\n  }\n  sendSelectedValue(selectedChoice) {\n    this.selectedChoice = selectedChoice.title;\n    let target = this.action.action;\n    target['sessionValues'] = selectedChoice.sessionValues;\n    this.onSendReply.emit({\n      action: target,\n      title: selectedChoice.title,\n      type: this.action.type\n    });\n    this.detectChanges();\n  }\n  _filter(inputValue) {\n    let filteredSections = [];\n    if (this.action.sections && inputValue != '') {\n      filteredSections = JSON.parse(JSON.stringify(this.action.sections));\n      filteredSections.forEach(section => {\n        section.choices = section.choices.filter(choice => choice.title.toUpperCase().trim().includes(inputValue.toUpperCase().trim()));\n      });\n      return filteredSections.filter(section => section.choices.length > 0);\n    } else {\n      return JSON.parse(JSON.stringify(this.action.sections));\n    }\n  }\n  onInputBlur(event) {\n    if (!event.relatedTarget?.classList.contains('mat-option')) {\n      setTimeout(() => {\n        if (this.auto) {\n          this.auto.closePanel();\n        }\n      }, 100);\n    }\n  }\n  detectChanges() {\n    this.cdr.markForCheck();\n    this.app.tick();\n  }\n  togglePanel(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    this.auto.panelOpen ? this.auto.closePanel() : this.onInputClick();\n    this.detectChanges();\n  }\n  /** @nocollapse */\n  static #_ = this.ɵfac = function ListComponent_Factory(t) {\n    return new (t || ListComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ApplicationRef));\n  };\n  /** @nocollapse */\n  static #_2 = this.ɵcmp = /** @pureOrBreakMyCode */i0.ɵɵdefineComponent({\n    type: ListComponent,\n    selectors: [[\"list-action\"]],\n    viewQuery: function ListComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatAutocompleteTrigger, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.auto = _t.first);\n      }\n    },\n    inputs: {\n      action: \"action\",\n      inverted: \"inverted\",\n      primaryColor: \"primaryColor\",\n      textColor: \"textColor\",\n      userBubbleColor: \"userBubbleColor\",\n      userTextColor: \"userTextColor\",\n      autoScroll: \"autoScroll\",\n      disabled: \"disabled\"\n    },\n    outputs: {\n      onSendReply: \"onSendReply\",\n      onLoadNextAction: \"onLoadNextAction\",\n      onLastActionRendered: \"onLastActionRendered\"\n    },\n    decls: 9,\n    vars: 16,\n    consts: [[1, \"console-list-type\", 3, \"ngClass\"], [1, \"list-question\"], [1, \"bubble\", 3, \"ngClass\"], [\"class\", \"bubble-arrow\", 3, \"border-right-color\", 4, \"ngIf\"], [\"class\", \"bubble-arrow-right\", 3, \"border-right-color\", 4, \"ngIf\"], [1, \"question-container\"], [\"class\", \"list-container\", 4, \"ngIf\"], [3, \"action\", \"userTextColor\", \"userBubbleColor\", \"inverted\", \"autoScroll\", 4, \"ngIf\"], [1, \"bubble-arrow\"], [1, \"bubble-arrow-right\"], [1, \"list-container\"], [\"type\", \"text\", \"matInput\", \"\", 1, \"list-input\", 3, \"placeholder\", \"formControl\", \"matAutocomplete\", \"click\", \"blur\"], [1, \"list-icon\", 3, \"click\"], [\"autoActiveFirstOption\", \"\", 1, \"list-autocomplete-panel\"], [\"auto\", \"matAutocomplete\"], [4, \"ngFor\", \"ngForOf\"], [3, \"label\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"label\"], [3, \"value\", \"onSelectionChange\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"onSelectionChange\"], [\"class\", \"option-img\", \"aria-hidden\", \"\", \"height\", \"25\", 3, \"src\", \"alt\", 4, \"ngIf\"], [\"aria-hidden\", \"\", \"height\", \"25\", 1, \"option-img\", 3, \"src\", \"alt\"], [3, \"action\", \"userTextColor\", \"userBubbleColor\", \"inverted\", \"autoScroll\"]],\n    template: function ListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵtemplate(3, ListComponent_span_3_Template, 1, 2, \"span\", 3);\n        i0.ɵɵtemplate(4, ListComponent_span_4_Template, 1, 2, \"span\", 4);\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(7, ListComponent_div_7_Template, 6, 6, \"div\", 6);\n        i0.ɵɵtemplate(8, ListComponent_user_message_console_action_8_Template, 1, 7, \"user-message-console-action\", 7);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c1, ctx.inverted));\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleProp(\"background-color\", ctx.primaryColor);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(13, _c2, !ctx.inverted, ctx.inverted));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.inverted);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.inverted);\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"color\", ctx.textColor);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.action.message, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedChoice === undefined);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedChoice !== undefined);\n      }\n    },\n    styles: [\".list-autocomplete-panel {\\n  background: white;\\n  color: rgba(0, 0, 0, 0.87);\\n}\\n.list-autocomplete-panel:not([class*=mat-elevation-z]) {\\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\\n}\\n.list-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover) {\\n  background: white;\\n}\\n.list-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover):not(.mat-option-disabled) {\\n  color: rgba(0, 0, 0, 0.87);\\n}\\n.list-autocomplete-panel .mat-option:hover {\\n  background: #f4f4ed;\\n}\\n\\n.console-list-type.inverted {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-end;\\n}\\n.console-list-type .bubble {\\n  position: relative;\\n  padding: 12px;\\n  border-radius: 12px;\\n}\\n.console-list-type .bubble.bot {\\n  margin: 16px 24px 0 8px;\\n  color: #FFFFFF;\\n  border-bottom-left-radius: 0;\\n  background: #30B286;\\n  float: left;\\n}\\n.console-list-type .bubble.user {\\n  margin: 16px 8px 0 24px;\\n  color: #FFFFFF;\\n  border-bottom-right-radius: 0;\\n  background: #30B286;\\n  float: right;\\n}\\n.console-list-type .list-question {\\n  display: flex;\\n  padding-bottom: 16px;\\n}\\n.console-list-type .list-question .question-container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n.console-list-type .list-container {\\n  position: relative;\\n  width: 230px;\\n  margin: 0 8px 8px 8px;\\n}\\n.console-list-type .list-container .option-img {\\n  vertical-align: middle;\\n  margin-right: 8px;\\n}\\n.console-list-type .list-container .list-input {\\n  height: 30px;\\n  width: 100%;\\n  box-sizing: border-box;\\n  border-radius: 12px;\\n  border: 2px solid #BEBEB9;\\n  outline: none;\\n  padding-left: 10px;\\n  padding-right: 20px;\\n  font-size: 14px;\\n}\\n.console-list-type .list-container .list-input[placeholder] {\\n  text-overflow: ellipsis;\\n}\\n.console-list-type .list-container .list-icon {\\n  width: 0;\\n  height: 0;\\n  border-left: 5px solid transparent;\\n  border-right: 5px solid transparent;\\n  border-top: 5px solid #BEBEB9;\\n  position: absolute;\\n  top: 15px;\\n  right: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3Byb2plY3RzL2NsdXN0YWFyLXdlYmNoYXQtY29tcG9uZW50cy9zcmMvbGliL2xpc3QvbGlzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFBO0VBQ0EsMEJBQUE7QUFDRjtBQUNFO0VBQ0UsMEhBQUE7QUFDSjtBQUVFO0VBQ0UsaUJBQUE7QUFBSjtBQUdFO0VBQ0UsMEJBQUE7QUFESjtBQUlFO0VBQ0UsbUJBQUE7QUFGSjs7QUFPRTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtFQUNBLHFCQUFBO0FBSko7QUFPRTtFQUNFLGtCQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0FBTEo7QUFPSTtFQUNFLHVCQUFBO0VBQ0EsY0FBQTtFQUNBLDRCQUFBO0VBQ0EsbUJBQUE7RUFDQSxXQUFBO0FBTE47QUFRSTtFQUNFLHVCQUFBO0VBQ0EsY0FBQTtFQUNBLDZCQUFBO0VBQ0EsbUJBQUE7RUFDQSxZQUFBO0FBTk47QUFVRTtFQUNFLGFBQUE7RUFDQSxvQkFBQTtBQVJKO0FBVUk7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7QUFSTjtBQVlFO0VBQ0Usa0JBQUE7RUFDQSxZQUFBO0VBQ0EscUJBQUE7QUFWSjtBQVlJO0VBQ0Usc0JBQUE7RUFDQSxpQkFBQTtBQVZOO0FBYUU7RUFDRSxZQUFBO0VBQ0EsV0FBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7RUFDQSx5QkFBQTtFQUNBLGFBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0EsZUFBQTtBQVhKO0FBYUk7RUFDRSx1QkFBQTtBQVhOO0FBZUk7RUFDRSxRQUFBO0VBQ0EsU0FBQTtFQUNBLGtDQUFBO0VBQ0EsbUNBQUE7RUFDQSw2QkFBQTtFQUNBLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLFdBQUE7QUFiTiIsInNvdXJjZXNDb250ZW50IjpbIi5saXN0LWF1dG9jb21wbGV0ZS1wYW5lbCB7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg3KTtcblxuICAmOm5vdChbY2xhc3MqPW1hdC1lbGV2YXRpb24tel0pIHtcbiAgICBib3gtc2hhZG93OiAwcHggMnB4IDRweCAtMXB4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMHB4IDRweCA1cHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xNCksIDBweCAxcHggMTBweCAwcHggcmdiYSgwLCAwLCAwLCAwLjEyKTtcbiAgfVxuXG4gIC5tYXQtb3B0aW9uLm1hdC1zZWxlY3RlZDpub3QoLm1hdC1hY3RpdmUpOm5vdCg6aG92ZXIpIHtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgfVxuXG4gIC5tYXQtb3B0aW9uLm1hdC1zZWxlY3RlZDpub3QoLm1hdC1hY3RpdmUpOm5vdCg6aG92ZXIpOm5vdCgubWF0LW9wdGlvbi1kaXNhYmxlZCkge1xuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuODcpO1xuICB9XG5cbiAgLm1hdC1vcHRpb246aG92ZXIge1xuICAgIGJhY2tncm91bmQ6ICNmNGY0ZWQ7XG4gIH1cbn1cblxuLmNvbnNvbGUtbGlzdC10eXBlIHtcbiAgJi5pbnZlcnRlZCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgfVxuXG4gIC5idWJibGUge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nOiAxMnB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDEycHg7XG5cbiAgICAmLmJvdCB7XG4gICAgICBtYXJnaW46IDE2cHggMjRweCAwIDhweDtcbiAgICAgIGNvbG9yOiAjRkZGRkZGO1xuICAgICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMDtcbiAgICAgIGJhY2tncm91bmQ6ICMzMEIyODY7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICB9XG5cbiAgICAmLnVzZXIge1xuICAgICAgbWFyZ2luOiAxNnB4IDhweCAwIDI0cHg7XG4gICAgICBjb2xvcjogI0ZGRkZGRjtcbiAgICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xuICAgICAgYmFja2dyb3VuZDogIzMwQjI4NjtcbiAgICAgIGZsb2F0OiByaWdodDtcbiAgICB9XG4gIH1cblxuICAubGlzdC1xdWVzdGlvbiB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTZweDtcblxuICAgIC5xdWVzdGlvbi1jb250YWluZXIge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgfVxuICB9XG5cbiAgLmxpc3QtY29udGFpbmVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgd2lkdGg6IDIzMHB4O1xuICAgIG1hcmdpbjogMCA4cHggOHB4IDhweDtcblxuICAgIC5vcHRpb24taW1nIHtcbiAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDhweDtcbiAgfVxuXG4gIC5saXN0LWlucHV0IHtcbiAgICBoZWlnaHQ6IDMwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBib3JkZXItcmFkaXVzOiAxMnB4O1xuICAgIGJvcmRlcjogMnB4IHNvbGlkICNCRUJFQjk7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG4gICAgcGFkZGluZy1yaWdodDogMjBweDtcbiAgICBmb250LXNpemU6IDE0cHg7XG5cbiAgICAmW3BsYWNlaG9sZGVyXSB7XG4gICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICB9XG4gIH1cblxuICAgIC5saXN0LWljb24ge1xuICAgICAgd2lkdGg6IDA7XG4gICAgICBoZWlnaHQ6IDA7XG4gICAgICBib3JkZXItbGVmdDogNXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgYm9yZGVyLXJpZ2h0OiA1cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICBib3JkZXItdG9wOiA1cHggc29saWQgI0JFQkVCOTtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMTVweDtcbiAgICAgIHJpZ2h0OiAxMHB4O1xuICAgIH1cbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}","map":{"version":3,"names":["EventEmitter","Observable","map","startWith","skip","takeWhile","UntypedFormControl","MatLegacyAutocompleteTrigger","MatAutocompleteTrigger","i0","ɵɵelement","ɵɵstyleProp","ctx_r0","primaryColor","ctx_r1","ɵɵproperty","choice_r10","imageUrl","ɵɵsanitizeUrl","title","ɵɵelementStart","ɵɵlistener","ListComponent_div_7_ng_container_5_mat_optgroup_1_mat_option_1_Template_mat_option_onSelectionChange_0_listener","restoredCtx","ɵɵrestoreView","_r14","$implicit","ctx_r13","ɵɵnextContext","ɵɵresetView","sendSelectedValue","ɵɵtemplate","ListComponent_div_7_ng_container_5_mat_optgroup_1_mat_option_1_img_1_Template","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ListComponent_div_7_ng_container_5_mat_optgroup_1_mat_option_1_Template","section_r6","choices","choice_r17","ListComponent_div_7_ng_container_5_ng_container_2_mat_option_1_Template_mat_option_onSelectionChange_0_listener","_r21","ctx_r20","ListComponent_div_7_ng_container_5_ng_container_2_mat_option_1_img_1_Template","ɵɵelementContainerStart","ListComponent_div_7_ng_container_5_ng_container_2_mat_option_1_Template","ɵɵelementContainerEnd","ListComponent_div_7_ng_container_5_mat_optgroup_1_Template","ListComponent_div_7_ng_container_5_ng_container_2_Template","ListComponent_div_7_Template_input_click_1_listener","_r24","ctx_r23","onInputClick","ListComponent_div_7_Template_input_blur_1_listener","$event","ctx_r25","onInputBlur","ListComponent_div_7_Template_div_click_2_listener","ctx_r26","togglePanel","ListComponent_div_7_ng_container_5_Template","ctx_r2","action","placeholder","inputControl","_r4","filteredSections","ɵɵpureFunction1","_c0","ctx_r3","selectedChoice","userTextColor","userBubbleColor","inverted","autoScroll","ListComponent","constructor","cdr","app","textColor","disabled","onSendReply","onLoadNextAction","onLastActionRendered","filteredSections$","ngOnInit","disable","emit","JSON","parse","stringify","sections","valueChanges","pipe","value","_filter","undefined","subscribe","detectChanges","setTimeout","element","document","getElementById","scrollTop","scrollHeight","clientHeight","markForCheck","ngAfterViewInit","auto","openPanel","updatePosition","target","sessionValues","type","inputValue","forEach","section","filter","choice","toUpperCase","trim","includes","length","event","relatedTarget","classList","contains","closePanel","tick","stopPropagation","preventDefault","panelOpen","ɵɵdirectiveInject","ChangeDetectorRef","ApplicationRef","selectors","viewQuery","ListComponent_Query","rf","ctx","ListComponent_span_3_Template","ListComponent_span_4_Template","ListComponent_div_7_Template","ListComponent_user_message_console_action_8_Template","_c1","ɵɵpureFunction2","_c2","message"],"sources":["/home/smez/apps/webchat-components/projects/clustaar-webchat-components/src/lib/list/list.component.ts","/home/smez/apps/webchat-components/projects/clustaar-webchat-components/src/lib/list/list.component.html"],"sourcesContent":["import {\n  AfterViewInit,\n  ApplicationRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ViewEncapsulation,\n  ViewChild\n} from '@angular/core';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Choice, List, Section } from './list.model';\nimport { Observable } from 'rxjs';\nimport { map, startWith, skip, takeWhile } from 'rxjs/operators';\nimport { UntypedFormControl } from '@angular/forms';\nimport { MatLegacyAutocompleteTrigger as MatAutocompleteTrigger } from '@angular/material/legacy-autocomplete';\n\n@Component({\n  selector: 'list-action',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class ListComponent implements OnInit, AfterViewInit {\n  @Input() action: List;\n  @Input() inverted = false;\n  @Input() primaryColor = '#30B286';\n  @Input() textColor = '#FFFFFF';\n  @Input() userBubbleColor = '#C5DBEA';\n  @Input() userTextColor = '#2C3F59';\n  @Input() autoScroll? = true;\n  @Input() disabled? = false;\n\n  @Output() onSendReply = new EventEmitter<any>();\n  @Output() onLoadNextAction = new EventEmitter<boolean>();\n  @Output() onLastActionRendered: EventEmitter<boolean> =\n    new EventEmitter<boolean>();\n\n  filteredSections$: Observable<Section[]> = new Observable<[]>();\n  filteredSections = [];\n  selectedChoice: string;\n  inputControl = new UntypedFormControl('');\n  @ViewChild(MatAutocompleteTrigger) auto: MatAutocompleteTrigger;\n\n  constructor(private cdr: ChangeDetectorRef, private app: ApplicationRef) {}\n\n  ngOnInit(): void {\n    if (this.disabled) {\n      this.inputControl.disable();\n    }\n    this.onLoadNextAction.emit(true);\n    this.filteredSections = JSON.parse(JSON.stringify(this.action.sections));\n\n    this.filteredSections$ = this.inputControl.valueChanges.pipe(\n      startWith(''),\n      map((value) => this._filter(value || ''))\n    );\n\n    this.filteredSections$\n      .pipe(\n        skip(1),\n        takeWhile(() => this.selectedChoice === undefined)\n      )\n      .subscribe((filteredSections) => {\n        this.filteredSections = filteredSections;\n        this.detectChanges();\n      });\n\n    if (this.autoScroll) {\n      setTimeout(() => {\n        let element = document.getElementById('chat-console-messages');\n        if (element) {\n          element.scrollTop = element.scrollHeight - element.clientHeight;\n          this.cdr.markForCheck();\n        }\n      }, 500);\n    }\n    this.cdr.markForCheck();\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.onLastActionRendered.emit(true);\n    }, 0);\n  }\n\n  onInputClick(): void {\n    if (!this.disabled) {\n      this.auto.openPanel();\n      // This trigger the autocomplete detection change on zoneless mode\n      this.auto.updatePosition();\n    }\n  }\n\n  sendSelectedValue(selectedChoice: Choice): void {\n    this.selectedChoice = selectedChoice.title;\n\n    let target = this.action.action;\n    target['sessionValues'] = selectedChoice.sessionValues;\n\n    this.onSendReply.emit({\n      action: target,\n      title: selectedChoice.title,\n      type: this.action.type\n    });\n    this.detectChanges();\n  }\n\n  private _filter(inputValue: string): Section[] {\n    let filteredSections = [];\n    if (this.action.sections && inputValue != '') {\n      filteredSections = JSON.parse(JSON.stringify(this.action.sections));\n      filteredSections.forEach((section) => {\n        section.choices = section.choices.filter((choice) =>\n          choice.title\n            .toUpperCase()\n            .trim()\n            .includes(inputValue.toUpperCase().trim())\n        );\n      });\n      return filteredSections.filter((section) => section.choices.length > 0);\n    } else {\n      return JSON.parse(JSON.stringify(this.action.sections));\n    }\n  }\n\n  onInputBlur(event): void {\n    if (!event.relatedTarget?.classList.contains('mat-option')) {\n      setTimeout(() => {\n        if (this.auto) {\n          this.auto.closePanel();\n        }\n      }, 100);\n    }\n  }\n\n  detectChanges(): void {\n    this.cdr.markForCheck();\n    this.app.tick();\n  }\n\n  togglePanel(event: Event): void {\n    event.stopPropagation();\n    event.preventDefault();\n    this.auto.panelOpen ? this.auto.closePanel() : this.onInputClick();\n    this.detectChanges();\n  }\n}\n","<div class=\"console-list-type\" [ngClass]=\"{'inverted': inverted}\">\n    <div class=\"list-question\">\n        <div class=\"bubble\" [ngClass]=\"{'bot': !inverted, 'user' : inverted}\" [style.background-color]=\"primaryColor\">\n            <span *ngIf=\"!inverted\" [style.border-right-color]=\"primaryColor\" class=\"bubble-arrow\"></span>\n            <span *ngIf=\"inverted\" [style.border-right-color]=\"primaryColor\" class=\"bubble-arrow-right\"></span>\n            <div [style.color]=\"textColor\" class=\"question-container\">\n                {{ action.message }}\n            </div>\n        </div>\n    </div>\n\n    <div class=\"list-container\" *ngIf=\"selectedChoice === undefined\">\n        <input type=\"text\"\n                class=\"list-input\"\n                [placeholder]=\"action.placeholder\"\n                [formControl]=\"inputControl\"\n                matInput\n                [matAutocomplete]=\"auto\"\n                (click)=\"onInputClick()\"\n                (blur)=\"onInputBlur($event)\"\n                [style.border-color]=\"primaryColor\">\n        <div class=\"list-icon\" (click)=\"togglePanel($event)\"></div>\n        <mat-autocomplete autoActiveFirstOption class=\"list-autocomplete-panel\" #auto=\"matAutocomplete\">\n            <ng-container *ngFor=\"let section of filteredSections\">\n                <mat-optgroup [label]=\"section.title\" *ngIf=\"section.title\">\n                    <mat-option *ngFor=\"let choice of section.choices\" [value]=\"choice.title\" (onSelectionChange)=\"sendSelectedValue(choice)\">\n                        <img class=\"option-img\" aria-hidden [src]=\"choice.imageUrl\" [alt]=\"choice.title\" height=\"25\" *ngIf=\"choice.imageUrl\">\n                        {{ choice.title }}\n                    </mat-option>\n                </mat-optgroup>\n                <ng-container *ngIf=\"!section.title\">\n                    <mat-option *ngFor=\"let choice of section.choices\" [value]=\"choice.title\" (onSelectionChange)=\"sendSelectedValue(choice)\">\n                        <img class=\"option-img\" aria-hidden [src]=\"choice.imageUrl\" [alt]=\"choice.title\" height=\"25\" *ngIf=\"choice.imageUrl\">\n                        {{ choice.title }}\n                    </mat-option>\n                </ng-container>\n            </ng-container>\n        </mat-autocomplete>\n    </div>\n\n    <user-message-console-action [action]=\"{message: selectedChoice}\"\n                                [userTextColor]=\"userTextColor\"\n                                [userBubbleColor]=\"userBubbleColor\"\n                                [inverted]=\"inverted\"\n                                [autoScroll]=\"autoScroll\"\n                                *ngIf=\"selectedChoice !== undefined\">\n    </user-message-console-action>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}