{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = function (a0, a1) {\n  return {\n    \"bot\": a0,\n    \"user\": a1\n  };\n};\nexport class ImageConsoleActionComponent {\n  constructor(cdr) {\n    this.cdr = cdr;\n    this.inverted = false;\n    this.primaryColor = '#30B286';\n    this.autoScroll = true;\n    this.onLoadNextAction = new EventEmitter();\n    this.onLastActionRendered = new EventEmitter();\n    this.onImageClicked = new EventEmitter();\n  }\n  ngOnInit() {\n    this.onLoadNextAction.emit(true);\n    if (this.autoScroll) {\n      setTimeout(() => {\n        let element = document.getElementById('chat-console-messages');\n        if (element) {\n          element.scrollTop = element.scrollHeight - element.clientHeight;\n          this.cdr.markForCheck();\n        }\n      }, 500);\n    }\n  }\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.onLastActionRendered.emit(true);\n    }, 0);\n  }\n  /** @nocollapse */\n  static #_ = this.ɵfac = function ImageConsoleActionComponent_Factory(t) {\n    return new (t || ImageConsoleActionComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  /** @nocollapse */\n  static #_2 = this.ɵcmp = /** @pureOrBreakMyCode */i0.ɵɵdefineComponent({\n    type: ImageConsoleActionComponent,\n    selectors: [[\"image-console-action\"]],\n    inputs: {\n      action: \"action\",\n      inverted: \"inverted\",\n      primaryColor: \"primaryColor\",\n      autoScroll: \"autoScroll\"\n    },\n    outputs: {\n      onLoadNextAction: \"onLoadNextAction\",\n      onLastActionRendered: \"onLastActionRendered\",\n      onImageClicked: \"onImageClicked\"\n    },\n    decls: 2,\n    vars: 6,\n    consts: [[1, \"console-image-type\", 3, \"ngClass\", \"click\"], [3, \"alt\", \"src\"]],\n    template: function ImageConsoleActionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"click\", function ImageConsoleActionComponent_Template_div_click_0_listener() {\n          return ctx.onImageClicked.emit(ctx.action.imageURL);\n        });\n        i0.ɵɵelement(1, \"img\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(3, _c0, !ctx.inverted, ctx.inverted));\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"alt\", ctx.action.alt);\n        i0.ɵɵproperty(\"src\", ctx.action.imageURL, i0.ɵɵsanitizeUrl);\n      }\n    },\n    dependencies: [i1.NgClass],\n    styles: [\".console-image-type[_ngcontent-%COMP%] {\\n  cursor: zoom-in;\\n  width: 100%;\\n  position: relative;\\n}\\n.console-image-type.bot[_ngcontent-%COMP%] {\\n  float: left;\\n}\\n.console-image-type.user[_ngcontent-%COMP%] {\\n  float: right;\\n}\\n.console-image-type[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  max-width: 80%;\\n  margin: 8px 0 0 8px;\\n  border: 2px solid white;\\n  border-radius: 8px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3Byb2plY3RzL2NsdXN0YWFyLXdlYmNoYXQtY29tcG9uZW50cy9zcmMvbGliL2ltYWdlL2ltYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFBO0VBQ0EsV0FBQTtFQUNBLGtCQUFBO0FBQ0Y7QUFDRTtFQUNFLFdBQUE7QUFDSjtBQUVFO0VBQ0UsWUFBQTtBQUFKO0FBR0U7RUFDRSxjQUFBO0VBQ0EsbUJBQUE7RUFFQSx1QkFBQTtFQUNBLGtCQUFBO0FBRkoiLCJzb3VyY2VzQ29udGVudCI6WyIuY29uc29sZS1pbWFnZS10eXBlIHtcbiAgY3Vyc29yOiB6b29tLWluO1xuICB3aWR0aDogMTAwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICYuYm90IHtcbiAgICBmbG9hdDogbGVmdDtcbiAgfVxuXG4gICYudXNlciB7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICB9XG5cbiAgaW1nIHtcbiAgICBtYXgtd2lkdGg6IDgwJTtcbiAgICBtYXJnaW46IDhweCAwIDAgOHB4O1xuXG4gICAgYm9yZGVyOiAycHggc29saWQgd2hpdGU7XG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"],\n    changeDetection: 0\n  });\n}","map":{"version":3,"names":["EventEmitter","ImageConsoleActionComponent","constructor","cdr","inverted","primaryColor","autoScroll","onLoadNextAction","onLastActionRendered","onImageClicked","ngOnInit","emit","setTimeout","element","document","getElementById","scrollTop","scrollHeight","clientHeight","markForCheck","ngAfterViewInit","i0","ɵɵdirectiveInject","ChangeDetectorRef","selectors","inputs","action","outputs","decls","vars","consts","template","ImageConsoleActionComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","ImageConsoleActionComponent_Template_div_click_0_listener","imageURL","ɵɵelement","ɵɵelementEnd","ɵɵproperty","ɵɵpureFunction2","_c0","ɵɵadvance","ɵɵpropertyInterpolate","alt","ɵɵsanitizeUrl"],"sources":["/home/smez/apps/webchat-components/projects/clustaar-webchat-components/src/lib/image/image.ts","/home/smez/apps/webchat-components/projects/clustaar-webchat-components/src/lib/image/image.html"],"sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\n\n@Component({\n  selector: 'image-console-action',\n  templateUrl: './image.html',\n  styleUrls: ['./image.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ImageConsoleActionComponent implements OnInit, AfterViewInit {\n\n  @Input() action: any;\n  @Input() inverted = false;\n  @Input() primaryColor = '#30B286';\n  @Input() autoScroll? = true;\n  @Output() onLoadNextAction: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() onLastActionRendered: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() onImageClicked = new EventEmitter<string>();\n\n  constructor(private cdr: ChangeDetectorRef) {\n  }\n\n  ngOnInit() {\n    this.onLoadNextAction.emit(true);\n\n    if (this.autoScroll) {\n      setTimeout(() => {\n        let element = document.getElementById('chat-console-messages');\n        if (element) {\n          element.scrollTop = element.scrollHeight - element.clientHeight;\n          this.cdr.markForCheck();\n        }\n\n      }, 500);\n    }\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.onLastActionRendered.emit(true);\n    }, 0);\n  }\n}\n","<div class=\"console-image-type\" [ngClass]=\"{'bot': !inverted, 'user': inverted}\"\n     (click)=\"onImageClicked.emit(action.imageURL)\">\n  <img alt=\"{{action.alt}}\" [src]=\"action.imageURL\">\n</div>\n"],"mappings":"AAAA,SAKEA,YAAY,QAIP,eAAe;;;;;;;;;AAQtB,OAAM,MAAOC,2BAA2B;EAUtCC,YAAoBC,GAAsB;IAAtB,KAAAA,GAAG,GAAHA,GAAG;IAPd,KAAAC,QAAQ,GAAG,KAAK;IAChB,KAAAC,YAAY,GAAG,SAAS;IACxB,KAAAC,UAAU,GAAI,IAAI;IACjB,KAAAC,gBAAgB,GAA0B,IAAIP,YAAY,EAAW;IACrE,KAAAQ,oBAAoB,GAA0B,IAAIR,YAAY,EAAW;IACzE,KAAAS,cAAc,GAAG,IAAIT,YAAY,EAAU;EAGrD;EAEAU,QAAQA,CAAA;IACN,IAAI,CAACH,gBAAgB,CAACI,IAAI,CAAC,IAAI,CAAC;IAEhC,IAAI,IAAI,CAACL,UAAU,EAAE;MACnBM,UAAU,CAAC,MAAK;QACd,IAAIC,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAC,uBAAuB,CAAC;QAC9D,IAAIF,OAAO,EAAE;UACXA,OAAO,CAACG,SAAS,GAAGH,OAAO,CAACI,YAAY,GAAGJ,OAAO,CAACK,YAAY;UAC/D,IAAI,CAACf,GAAG,CAACgB,YAAY,EAAE;;MAG3B,CAAC,EAAE,GAAG,CAAC;;EAEX;EAEAC,eAAeA,CAAA;IACbR,UAAU,CAAC,MAAK;MACd,IAAI,CAACJ,oBAAoB,CAACG,IAAI,CAAC,IAAI,CAAC;IACtC,CAAC,EAAE,CAAC,CAAC;EACP;;;qBAhCWV,2BAA2B,EAAAoB,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,iBAAA;EAAA;;;UAA3BtB,2BAA2B;IAAAuB,SAAA;IAAAC,MAAA;MAAAC,MAAA;MAAAtB,QAAA;MAAAC,YAAA;MAAAC,UAAA;IAAA;IAAAqB,OAAA;MAAApB,gBAAA;MAAAC,oBAAA;MAAAC,cAAA;IAAA;IAAAmB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,qCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCjBxCZ,EAAA,CAAAc,cAAA,aACoD;QAA/Cd,EAAA,CAAAe,UAAA,mBAAAC,0DAAA;UAAA,OAASH,GAAA,CAAAzB,cAAA,CAAAE,IAAA,CAAAuB,GAAA,CAAAR,MAAA,CAAAY,QAAA,CAAoC;QAAA,EAAC;QACjDjB,EAAA,CAAAkB,SAAA,aAAkD;QACpDlB,EAAA,CAAAmB,YAAA,EAAM;;;QAH0BnB,EAAA,CAAAoB,UAAA,YAAApB,EAAA,CAAAqB,eAAA,IAAAC,GAAA,GAAAT,GAAA,CAAA9B,QAAA,EAAA8B,GAAA,CAAA9B,QAAA,EAAgD;QAEzEiB,EAAA,CAAAuB,SAAA,GAAoB;QAApBvB,EAAA,CAAAwB,qBAAA,QAAAX,GAAA,CAAAR,MAAA,CAAAoB,GAAA,CAAoB;QAACzB,EAAA,CAAAoB,UAAA,QAAAP,GAAA,CAAAR,MAAA,CAAAY,QAAA,EAAAjB,EAAA,CAAA0B,aAAA,CAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}