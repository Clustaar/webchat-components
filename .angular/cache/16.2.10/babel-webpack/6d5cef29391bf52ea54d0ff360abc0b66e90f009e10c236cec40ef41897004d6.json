{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../user-message/user-message\";\nimport * as i3 from \"../obfuscation/obfuscation.pipe\";\nfunction QuickreplyConsoleActionComponent_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"border-right-color\", ctx_r0.primaryColor);\n  }\n}\nfunction QuickreplyConsoleActionComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 9);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"border-left-color\", ctx_r1.primaryColor);\n  }\n}\nconst _c0 = function (a0, a1, a2) {\n  return {\n    \"selected-button\": a0,\n    \"bot\": a1,\n    \"user\": a2\n  };\n};\nfunction QuickreplyConsoleActionComponent_div_6_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"mouseenter\", function QuickreplyConsoleActionComponent_div_6_button_1_Template_button_mouseenter_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const i_r7 = restoredCtx.index;\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.onMouseEnter(i_r7));\n    })(\"mouseleave\", function QuickreplyConsoleActionComponent_div_6_button_1_Template_button_mouseleave_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.onMouseLeave());\n    })(\"click\", function QuickreplyConsoleActionComponent_div_6_button_1_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const i_r7 = restoredCtx.index;\n      const button_r6 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.sendReply(i_r7, button_r6));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const button_r6 = ctx.$implicit;\n    const i_r7 = ctx.index;\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"border-color\", ctx_r5.primaryColor)(\"background-color\", ctx_r5.indexHoverButton == i_r7 || i_r7 == ctx_r5.indexSelectedButton ? ctx_r5.primaryColor : null)(\"color\", ctx_r5.indexHoverButton == i_r7 || i_r7 == ctx_r5.indexSelectedButton ? ctx_r5.textColor : null);\n    i0.ɵɵproperty(\"disabled\", ctx_r5.indexSelectedButton != null && i_r7 !== ctx_r5.indexSelectedButton)(\"ngClass\", i0.ɵɵpureFunction3(9, _c0, i_r7 == ctx_r5.indexSelectedButton, !ctx_r5.inverted, ctx_r5.inverted));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", button_r6.title, \" \");\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"is-over\": a0\n  };\n};\nfunction QuickreplyConsoleActionComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtemplate(1, QuickreplyConsoleActionComponent_div_6_button_1_Template, 2, 13, \"button\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c1, ctx_r2.isOver));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.action.buttons);\n  }\n}\nconst _c2 = function (a0) {\n  return {\n    message: a0\n  };\n};\nfunction QuickreplyConsoleActionComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵelement(1, \"user-message-console-action\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"action\", i0.ɵɵpureFunction1(5, _c2, ctx_r3.action.buttons[ctx_r3.indexSelectedButton].title))(\"userTextColor\", ctx_r3.userTextColor)(\"userBubbleColor\", ctx_r3.userBubbleColor)(\"inverted\", ctx_r3.inverted)(\"autoScroll\", ctx_r3.autoScroll);\n  }\n}\nfunction QuickreplyConsoleActionComponent_div_8_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const button_r13 = ctx.$implicit;\n    const i_r14 = ctx.index;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"border-color\", ctx_r12.primaryColor)(\"background-color\", ctx_r12.indexHoverButton == i_r14 || i_r14 == ctx_r12.indexSelectedButton ? ctx_r12.primaryColor : null)(\"color\", ctx_r12.indexHoverButton == i_r14 || i_r14 == ctx_r12.indexSelectedButton ? ctx_r12.textColor : null);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(8, _c0, i_r14 == ctx_r12.indexSelectedButton, !ctx_r12.inverted, ctx_r12.inverted));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", button_r13.title, \" \");\n  }\n}\nfunction QuickreplyConsoleActionComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, QuickreplyConsoleActionComponent_div_8_button_1_Template, 2, 12, \"button\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.action.buttons);\n  }\n}\nconst _c3 = function (a0, a1) {\n  return {\n    \"bot\": a0,\n    \"user\": a1\n  };\n};\nexport class QuickreplyConsoleActionComponent {\n  constructor(cdr, app) {\n    this.cdr = cdr;\n    this.app = app;\n    this.primaryColor = '#30B286';\n    this.textColor = '#FFFFFF';\n    this.inverted = false;\n    this.readOnly = false;\n    this.autoScroll = true;\n    this.showSelectedButton = true;\n    this.userBubbleColor = '#C5DBEA';\n    this.userTextColor = '#2C3F59';\n    this.onLoadNextAction = new EventEmitter();\n    this.onSendReply = new EventEmitter();\n    this.onLastActionRendered = new EventEmitter();\n    this.isOver = false;\n    this.indexHoverButton = -1;\n  }\n  ngOnInit() {\n    this.onLoadNextAction.emit(true);\n    if (this.autoScroll) {\n      setTimeout(() => {\n        let element = document.getElementById('chat-console-messages');\n        if (element != null) {\n          element.scrollTop = element.scrollHeight - element.clientHeight;\n          this.cdr.markForCheck();\n        }\n      }, 500);\n    }\n  }\n  ngAfterViewInit() {\n    Array.from(document.querySelectorAll('.quickreply-message-' + this.indexAction + ' a')).forEach(function (a) {\n      if (a.getAttribute('target') == null) {\n        a.setAttribute('target', '_blank');\n      }\n    });\n    setTimeout(() => {\n      this.onLastActionRendered.emit(true);\n    }, 0);\n    if (this.action.selected) {\n      const indexSelectedButton = this.action.buttons.findIndex(actionButton => actionButton.title === this.action.selected.title);\n      if (indexSelectedButton >= 0) {\n        this.isOver = true;\n        this.indexSelectedButton = indexSelectedButton;\n        this.detectChanges();\n      }\n    }\n    this.cdr.markForCheck();\n  }\n  sendReply(indexSelectedButton, button) {\n    if (!this.isOver) {\n      this.action.selected = button;\n      this.onSendReply.emit(button);\n      this.isOver = true;\n      this.indexSelectedButton = indexSelectedButton;\n      this.detectChanges();\n    }\n  }\n  onMouseEnter(i) {\n    this.indexHoverButton = i;\n    this.detectChanges();\n  }\n  onMouseLeave() {\n    this.indexHoverButton = -1;\n    this.detectChanges();\n  }\n  detectChanges() {\n    this.cdr.markForCheck();\n    this.app.tick();\n  }\n  /** @nocollapse */\n  static #_ = this.ɵfac = function QuickreplyConsoleActionComponent_Factory(t) {\n    return new (t || QuickreplyConsoleActionComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ApplicationRef));\n  };\n  /** @nocollapse */\n  static #_2 = this.ɵcmp = /** @pureOrBreakMyCode */i0.ɵɵdefineComponent({\n    type: QuickreplyConsoleActionComponent,\n    selectors: [[\"quickreply-console-action\"]],\n    inputs: {\n      action: \"action\",\n      primaryColor: \"primaryColor\",\n      textColor: \"textColor\",\n      inverted: \"inverted\",\n      readOnly: \"readOnly\",\n      autoScroll: \"autoScroll\",\n      indexAction: \"indexAction\",\n      showSelectedButton: \"showSelectedButton\",\n      userBubbleColor: \"userBubbleColor\",\n      userTextColor: \"userTextColor\"\n    },\n    outputs: {\n      onLoadNextAction: \"onLoadNextAction\",\n      onSendReply: \"onSendReply\",\n      onLastActionRendered: \"onLastActionRendered\"\n    },\n    decls: 9,\n    vars: 20,\n    consts: [[1, \"console-quickreply-type\"], [1, \"bubble\", 3, \"ngClass\"], [\"class\", \"bubble-arrow\", 3, \"border-right-color\", 4, \"ngIf\"], [2, \"white-space\", \"pre-wrap\", 3, \"innerHTML\"], [\"class\", \"bubble-arrow-right\", 3, \"border-left-color\", 4, \"ngIf\"], [\"class\", \"quickreply-buttons\", 3, \"ngClass\", 4, \"ngIf\"], [\"style\", \"clear:both;\", 4, \"ngIf\"], [\"class\", \"quickreply-buttons\", 4, \"ngIf\"], [1, \"bubble-arrow\"], [1, \"bubble-arrow-right\"], [1, \"quickreply-buttons\", 3, \"ngClass\"], [\"class\", \"quickreply-button\", 3, \"border-color\", \"background-color\", \"color\", \"disabled\", \"ngClass\", \"mouseenter\", \"mouseleave\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"quickreply-button\", 3, \"disabled\", \"ngClass\", \"mouseenter\", \"mouseleave\", \"click\"], [2, \"clear\", \"both\"], [3, \"action\", \"userTextColor\", \"userBubbleColor\", \"inverted\", \"autoScroll\"], [1, \"quickreply-buttons\"], [\"class\", \"quickreply-button\", \"disabled\", \"\", 3, \"border-color\", \"background-color\", \"color\", \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"disabled\", \"\", 1, \"quickreply-button\", 3, \"ngClass\"]],\n    template: function QuickreplyConsoleActionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtemplate(2, QuickreplyConsoleActionComponent_span_2_Template, 1, 2, \"span\", 2);\n        i0.ɵɵelement(3, \"span\", 3);\n        i0.ɵɵpipe(4, \"obfuscation\");\n        i0.ɵɵtemplate(5, QuickreplyConsoleActionComponent_span_5_Template, 1, 2, \"span\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, QuickreplyConsoleActionComponent_div_6_Template, 2, 4, \"div\", 5);\n        i0.ɵɵtemplate(7, QuickreplyConsoleActionComponent_div_7_Template, 2, 7, \"div\", 6);\n        i0.ɵɵtemplate(8, QuickreplyConsoleActionComponent_div_8_Template, 2, 1, \"div\", 7);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵstyleProp(\"background-color\", ctx.primaryColor)(\"color\", ctx.textColor);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(17, _c3, !ctx.inverted, ctx.inverted));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.inverted);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassMapInterpolate1(\"quickreply-message-\", ctx.indexAction, \"\");\n        i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind2(4, 14, ctx.action.message, ctx.textColor), i0.ɵɵsanitizeHtml);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.inverted);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.readOnly && (!ctx.isOver || ctx.showSelectedButton));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isOver && !ctx.showSelectedButton);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.readOnly && !ctx.isOver);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i2.UserMessageConsoleActionComponent, i3.ObfuscationPipe],\n    styles: [\"ul, ol {\\n  white-space: normal !important;\\n}\\n\\n.bubble-arrow, .bubble-arrow-right {\\n  position: absolute;\\n  bottom: 0px;\\n  border-width: 8px;\\n  border-bottom: 0;\\n  border-top: 8px solid transparent;\\n  top: calc(100% - 8px);\\n}\\n\\n.bubble-arrow {\\n  left: 0;\\n  border-left: 0;\\n  margin-left: -8px;\\n  border-right-style: solid;\\n}\\n\\n.bubble-arrow-right {\\n  right: 0;\\n  border-right: 0;\\n  margin-right: -8px;\\n  border-left-style: solid;\\n}\\n\\n.bubble {\\n  font: 14px/16px Heebo;\\n}\\n.bubble a {\\n  color: inherit;\\n}\\n\\n.console-quickreply-type .quickreply-buttons {\\n  margin-top: 10px;\\n  padding-left: 10px;\\n  overflow: hidden;\\n  width: 100%;\\n  padding-top: 10px;\\n}\\n.console-quickreply-type .quickreply-buttons .quickreply-button {\\n  height: 100%;\\n  min-height: 32px;\\n  position: relative;\\n  padding: 5px 10px;\\n  border-radius: 18px;\\n  border: 1px solid currentColor;\\n  font-family: inherit;\\n  font-size: 14px;\\n  cursor: pointer;\\n  line-height: 20px;\\n  background-color: #fff;\\n  display: inline;\\n  margin-right: 6px;\\n  margin-bottom: 6px;\\n  transition: background-color 100ms, color 100ms;\\n  overflow: hidden;\\n  outline: 0;\\n  text-align: left;\\n}\\n.console-quickreply-type .quickreply-buttons .quickreply-button:hover {\\n  color: white;\\n}\\n.console-quickreply-type .quickreply-buttons .quickreply-button:disabled {\\n  background: unset;\\n  color: grey;\\n  border: 1px solid grey;\\n  cursor: not-allowed;\\n}\\n.console-quickreply-type .quickreply-buttons .quickreply-button.bot {\\n  float: left;\\n}\\n.console-quickreply-type .quickreply-buttons .quickreply-button.user {\\n  float: right;\\n}\\n.console-quickreply-type .quickreply-buttons.is-over .quickreply-button {\\n  cursor: not-allowed;\\n}\\n.console-quickreply-type .quickreply-buttons.is-over .quickreply-button.selected-button {\\n  color: white;\\n  font-weight: 500;\\n  outline: 0;\\n}\\n.console-quickreply-type .bubble {\\n  position: relative;\\n  padding: 12px;\\n  border-radius: 12px;\\n}\\n.console-quickreply-type .bubble.bot {\\n  margin: 16px 24px 0 8px;\\n  color: #FFFFFF;\\n  border-bottom-left-radius: 0;\\n  background: #30B286;\\n  float: left;\\n}\\n.console-quickreply-type .bubble.user {\\n  margin: 16px 8px 0 24px;\\n  color: #FFFFFF;\\n  border-bottom-right-radius: 0;\\n  background: #30B286;\\n  float: right;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3Byb2plY3RzL2NsdXN0YWFyLXdlYmNoYXQtY29tcG9uZW50cy9zcmMvbGliL3NoYXJlZC5zY3NzIiwid2VicGFjazovLy4vcHJvamVjdHMvY2x1c3RhYXItd2ViY2hhdC1jb21wb25lbnRzL3NyYy9saWIvcXVpY2tyZXBseS9xdWlja3JlcGx5LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsOEJBQUE7QUNDRjs7QURFQTtFQUNFLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQ0FBQTtFQUNBLHFCQUFBO0FDQ0Y7O0FERUE7RUFDRSxPQUFBO0VBQ0EsY0FBQTtFQUNBLGlCQUFBO0VBQ0EseUJBQUE7QUNDRjs7QURFQTtFQUNFLFFBQUE7RUFDQSxlQUFBO0VBQ0Esa0JBQUE7RUFDQSx3QkFBQTtBQ0NGOztBREVBO0VBQ0UscUJBQUE7QUNDRjtBREFFO0VBQ0UsY0FBQTtBQ0VKOztBQTVCRTtFQUNFLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQTtFQUNBLFdBQUE7RUFDQSxpQkFBQTtBQStCSjtBQTdCSTtFQUNFLFlBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7RUFDQSxtQkFBQTtFQUNBLDhCQUFBO0VBQ0Esb0JBQUE7RUFDQSxlQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0Esc0JBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLCtDQUFBO0VBQ0EsZ0JBQUE7RUFDQSxVQUFBO0VBQ0EsZ0JBQUE7QUErQk47QUE3Qk07RUFDRSxZQUFBO0FBK0JSO0FBNUJNO0VBQ0UsaUJBQUE7RUFDQSxXQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtBQThCUjtBQTNCTTtFQUNFLFdBQUE7QUE2QlI7QUExQk07RUFDRSxZQUFBO0FBNEJSO0FBdkJNO0VBQ0UsbUJBQUE7QUF5QlI7QUF2QlE7RUFDRSxZQUFBO0VBQ0EsZ0JBQUE7RUFDQSxVQUFBO0FBeUJWO0FBbkJFO0VBQ0Usa0JBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7QUFxQko7QUFuQkk7RUFDRSx1QkFBQTtFQUNBLGNBQUE7RUFDQSw0QkFBQTtFQUNBLG1CQUFBO0VBQ0EsV0FBQTtBQXFCTjtBQWxCSTtFQUNFLHVCQUFBO0VBQ0EsY0FBQTtFQUNBLDZCQUFBO0VBQ0EsbUJBQUE7RUFDQSxZQUFBO0FBb0JOIiwic291cmNlc0NvbnRlbnQiOlsidWwsIG9sIHtcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbCAhaW1wb3J0YW50O1xufVxuXG4uYnViYmxlLWFycm93LCAuYnViYmxlLWFycm93LXJpZ2h0IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDBweDtcbiAgYm9yZGVyLXdpZHRoOiA4cHg7XG4gIGJvcmRlci1ib3R0b206IDA7XG4gIGJvcmRlci10b3A6IDhweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgdG9wOiBjYWxjKDEwMCUgLSA4cHgpO1xufVxuXG4uYnViYmxlLWFycm93IHtcbiAgbGVmdDogMDtcbiAgYm9yZGVyLWxlZnQ6IDA7XG4gIG1hcmdpbi1sZWZ0OiAtOHB4O1xuICBib3JkZXItcmlnaHQtc3R5bGU6IHNvbGlkO1xufVxuXG4uYnViYmxlLWFycm93LXJpZ2h0IHtcbiAgcmlnaHQ6IDA7XG4gIGJvcmRlci1yaWdodDogMDtcbiAgbWFyZ2luLXJpZ2h0OiAtOHB4O1xuICBib3JkZXItbGVmdC1zdHlsZTogc29saWQ7XG59XG5cbi5idWJibGUge1xuICBmb250OiAxNHB4LzE2cHggSGVlYm87XG4gIGEge1xuICAgIGNvbG9yOiBpbmhlcml0O1xuICB9XG59XG4iLCJAaW1wb3J0ICcuLi9zaGFyZWQnO1xuXG4uY29uc29sZS1xdWlja3JlcGx5LXR5cGUge1xuXG4gIC5xdWlja3JlcGx5LWJ1dHRvbnMge1xuICAgIG1hcmdpbi10b3A6MTBweDtcbiAgICBwYWRkaW5nLWxlZnQ6MTBweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmctdG9wOiAxMHB4O1xuXG4gICAgLnF1aWNrcmVwbHktYnV0dG9uIHtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIG1pbi1oZWlnaHQ6IDMycHg7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBwYWRkaW5nOiA1cHggMTBweDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDE4cHg7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCBjdXJyZW50Q29sb3I7XG4gICAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgIGRpc3BsYXk6IGlubGluZTtcbiAgICAgIG1hcmdpbi1yaWdodDogNnB4O1xuICAgICAgbWFyZ2luLWJvdHRvbTogNnB4O1xuICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAxMDBtcywgY29sb3IgMTAwbXM7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgb3V0bGluZTogMDtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG5cbiAgICAgICY6aG92ZXIge1xuICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICB9XG5cbiAgICAgICY6ZGlzYWJsZWQge1xuICAgICAgICBiYWNrZ3JvdW5kIDogdW5zZXQ7XG4gICAgICAgIGNvbG9yOiBncmV5O1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBncmV5O1xuICAgICAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICAgICAgfVxuXG4gICAgICAmLmJvdCB7XG4gICAgICAgIGZsb2F0OmxlZnQ7XG4gICAgICB9XG5cbiAgICAgICYudXNlciB7XG4gICAgICAgIGZsb2F0OnJpZ2h0O1xuICAgICAgfVxuICAgIH1cblxuICAgICYuaXMtb3ZlciB7XG4gICAgICAucXVpY2tyZXBseS1idXR0b24ge1xuICAgICAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuXG4gICAgICAgICYuc2VsZWN0ZWQtYnV0dG9uIHtcbiAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgICBvdXRsaW5lOiAwO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gIH1cbiAgLmJ1YmJsZSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHBhZGRpbmc6IDEycHg7XG4gICAgYm9yZGVyLXJhZGl1czogMTJweDtcblxuICAgICYuYm90IHtcbiAgICAgIG1hcmdpbjogMTZweCAyNHB4IDAgOHB4O1xuICAgICAgY29sb3I6ICNGRkZGRkY7XG4gICAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwO1xuICAgICAgYmFja2dyb3VuZDogIzMwQjI4NjtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgIH1cblxuICAgICYudXNlciB7XG4gICAgICBtYXJnaW46IDE2cHggOHB4IDAgMjRweDtcbiAgICAgIGNvbG9yOiAjRkZGRkZGO1xuICAgICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDA7XG4gICAgICBiYWNrZ3JvdW5kOiAjMzBCMjg2O1xuICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgIH1cbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}","map":{"version":3,"names":["EventEmitter","i0","ɵɵelement","ɵɵstyleProp","ctx_r0","primaryColor","ctx_r1","ɵɵelementStart","ɵɵlistener","QuickreplyConsoleActionComponent_div_6_button_1_Template_button_mouseenter_0_listener","restoredCtx","ɵɵrestoreView","_r9","i_r7","index","ctx_r8","ɵɵnextContext","ɵɵresetView","onMouseEnter","QuickreplyConsoleActionComponent_div_6_button_1_Template_button_mouseleave_0_listener","ctx_r10","onMouseLeave","QuickreplyConsoleActionComponent_div_6_button_1_Template_button_click_0_listener","button_r6","$implicit","ctx_r11","sendReply","ɵɵtext","ɵɵelementEnd","ctx_r5","indexHoverButton","indexSelectedButton","textColor","ɵɵproperty","ɵɵpureFunction3","_c0","inverted","ɵɵadvance","ɵɵtextInterpolate1","title","ɵɵtemplate","QuickreplyConsoleActionComponent_div_6_button_1_Template","ɵɵpureFunction1","_c1","ctx_r2","isOver","action","buttons","_c2","ctx_r3","userTextColor","userBubbleColor","autoScroll","ctx_r12","i_r14","button_r13","QuickreplyConsoleActionComponent_div_8_button_1_Template","ctx_r4","QuickreplyConsoleActionComponent","constructor","cdr","app","readOnly","showSelectedButton","onLoadNextAction","onSendReply","onLastActionRendered","ngOnInit","emit","setTimeout","element","document","getElementById","scrollTop","scrollHeight","clientHeight","markForCheck","ngAfterViewInit","Array","from","querySelectorAll","indexAction","forEach","a","getAttribute","setAttribute","selected","findIndex","actionButton","detectChanges","button","i","tick","ɵɵdirectiveInject","ChangeDetectorRef","ApplicationRef","selectors","inputs","outputs","decls","vars","consts","template","QuickreplyConsoleActionComponent_Template","rf","ctx","QuickreplyConsoleActionComponent_span_2_Template","QuickreplyConsoleActionComponent_span_5_Template","QuickreplyConsoleActionComponent_div_6_Template","QuickreplyConsoleActionComponent_div_7_Template","QuickreplyConsoleActionComponent_div_8_Template","ɵɵpureFunction2","_c3","ɵɵclassMapInterpolate1","ɵɵpipeBind2","message","ɵɵsanitizeHtml"],"sources":["/home/smez/apps/webchat-components/projects/clustaar-webchat-components/src/lib/quickreply/quickreply.component.ts","/home/smez/apps/webchat-components/projects/clustaar-webchat-components/src/lib/quickreply/quickreply.component.html"],"sourcesContent":["import {\n  AfterViewInit,\n  ApplicationRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\n\n@Component({\n  selector: 'quickreply-console-action',\n  templateUrl: './quickreply.component.html',\n  styleUrls: ['./quickreply.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class QuickreplyConsoleActionComponent implements OnInit, AfterViewInit {\n  @Input() action: any;\n  @Input() primaryColor = '#30B286';\n  @Input() textColor = '#FFFFFF';\n  @Input() inverted = false;\n  @Input() readOnly = false;\n  @Input() autoScroll? = true;\n  @Input() indexAction: number;\n  @Input() showSelectedButton = true;\n  @Input() userBubbleColor = '#C5DBEA';\n  @Input() userTextColor = '#2C3F59';\n  @Output() onLoadNextAction: EventEmitter<boolean> =\n    new EventEmitter<boolean>();\n  @Output() onSendReply: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onLastActionRendered: EventEmitter<boolean> =\n    new EventEmitter<boolean>();\n\n  isOver = false;\n  indexSelectedButton: any;\n  indexHoverButton = -1;\n\n  constructor(private cdr: ChangeDetectorRef, private app: ApplicationRef) {}\n\n  ngOnInit() {\n    this.onLoadNextAction.emit(true);\n\n    if (this.autoScroll) {\n      setTimeout(() => {\n        let element = document.getElementById('chat-console-messages');\n\n        if (element != null) {\n          element.scrollTop = element.scrollHeight - element.clientHeight;\n          this.cdr.markForCheck();\n        }\n      }, 500);\n    }\n  }\n\n  ngAfterViewInit() {\n    Array.from(\n      document.querySelectorAll(\n        '.quickreply-message-' + this.indexAction + ' a'\n      )\n    ).forEach(function (a) {\n      if (a.getAttribute('target') == null) {\n        a.setAttribute('target', '_blank');\n      }\n    });\n    setTimeout(() => {\n      this.onLastActionRendered.emit(true);\n    }, 0);\n\n    if (this.action.selected) {\n      const indexSelectedButton = this.action.buttons.findIndex(\n        (actionButton) => actionButton.title === this.action.selected.title\n      );\n      if (indexSelectedButton >= 0) {\n        this.isOver = true;\n        this.indexSelectedButton = indexSelectedButton;\n\n        this.detectChanges();\n      }\n    }\n    this.cdr.markForCheck();\n  }\n\n  sendReply(indexSelectedButton, button) {\n    if (!this.isOver) {\n      this.action.selected = button;\n      this.onSendReply.emit(button);\n      this.isOver = true;\n      this.indexSelectedButton = indexSelectedButton;\n      this.detectChanges();\n    }\n  }\n\n  onMouseEnter(i) {\n    this.indexHoverButton = i;\n    this.detectChanges();\n  }\n\n  onMouseLeave() {\n    this.indexHoverButton = -1;\n    this.detectChanges();\n  }\n\n  detectChanges() {\n    this.cdr.markForCheck();\n    this.app.tick();\n  }\n}\n","<div class=\"console-quickreply-type\">\n  <div [style.background-color]=\"primaryColor\" class=\"bubble\" [ngClass]=\"{'bot': !inverted, 'user' : inverted}\"\n       [style.color]=\"textColor\">\n    <span *ngIf=\"!inverted\" [style.border-right-color]=\"primaryColor\" class=\"bubble-arrow\"></span>\n    <span class=\"quickreply-message-{{indexAction}}\" [innerHTML]=\"action.message | obfuscation: textColor\"\n          style=\"white-space: pre-wrap;\">\n    </span>\n    <span *ngIf=\"inverted\" [style.border-left-color]=\"primaryColor\" class=\"bubble-arrow-right\"></span>\n  </div>\n  <div *ngIf=\"!readOnly && ( !isOver || showSelectedButton)\" [ngClass]=\"{'is-over': isOver}\" class=\"quickreply-buttons\">\n    <button (mouseenter)=\"onMouseEnter(i)\" (mouseleave)=\"onMouseLeave()\" [style.border-color]=\"primaryColor\"\n            [style.background-color]=\"(indexHoverButton==i || i == indexSelectedButton)? primaryColor: null\"\n            [style.color]=\"(indexHoverButton==i || i == indexSelectedButton)? textColor: null\"\n            class=\"quickreply-button\" [disabled]=\"indexSelectedButton != null && i !== indexSelectedButton\"\n            [ngClass]=\"{'selected-button': i == indexSelectedButton, 'bot': !inverted, 'user' : inverted}\"\n            (click)=\"sendReply(i, button)\" *ngFor=\"let button of action.buttons; let i = index;\">\n      {{button.title}}\n    </button>\n  </div>\n\n\n  <div style=\"clear:both;\" *ngIf=\"isOver && !showSelectedButton\">\n    <user-message-console-action [action]=\"{message: action.buttons[indexSelectedButton].title}\"\n                                 [userTextColor]=\"userTextColor\"\n                                 [userBubbleColor]=\"userBubbleColor\"\n                                 [inverted]=\"inverted\"\n                                 [autoScroll]=\"autoScroll\">\n    </user-message-console-action>\n  </div>\n\n\n  <div *ngIf=\"readOnly && !isOver\" class=\"quickreply-buttons\">\n    <button class=\"quickreply-button\" disabled\n            [style.border-color]=\"primaryColor\"\n            [style.background-color]=\"(indexHoverButton==i || i == indexSelectedButton)? primaryColor: null\"\n            [style.color]=\"(indexHoverButton==i || i == indexSelectedButton)? textColor: null\"\n            [ngClass]=\"{'selected-button': i == indexSelectedButton, 'bot': !inverted, 'user' : inverted}\"\n            *ngFor=\"let button of action.buttons; let i = index;\">\n      {{button.title}}\n    </button>\n  </div>\n\n\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}